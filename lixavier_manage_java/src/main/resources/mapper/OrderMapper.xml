<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lixavier.manage.dao.OrderMapper">
    <resultMap id="BaseResultMap" type="com.lixavier.manage.model.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="real_pay_price" jdbcType="DECIMAL" property="realPayPrice" />
    <result column="promotion_price" jdbcType="DECIMAL" property="promotionPrice" />
    <result column="freight_price" jdbcType="DECIMAL" property="freightPrice" />
    <result column="gift_card_price" jdbcType="DECIMAL" property="giftCardPrice" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="close_time" jdbcType="TIMESTAMP" property="closeTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, order_no, order_status, consignee, mobile, address, total_price, real_pay_price, 
    promotion_price, freight_price, gift_card_price, pay_time, message, close_time, create_time, 
    update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.lixavier.manage.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lixavier.manage.model.OrderExample">
    delete from tb_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lixavier.manage.model.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_order (user_id, order_no, order_status, 
      consignee, mobile, address, 
      total_price, real_pay_price, promotion_price, 
      freight_price, gift_card_price, pay_time, 
      message, close_time, create_time, 
      update_time, is_deleted)
    values (#{userId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{orderStatus,jdbcType=TINYINT}, 
      #{consignee,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{totalPrice,jdbcType=DECIMAL}, #{realPayPrice,jdbcType=DECIMAL}, #{promotionPrice,jdbcType=DECIMAL}, 
      #{freightPrice,jdbcType=DECIMAL}, #{giftCardPrice,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP}, 
      #{message,jdbcType=VARCHAR}, #{closeTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.lixavier.manage.model.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="realPayPrice != null">
        real_pay_price,
      </if>
      <if test="promotionPrice != null">
        promotion_price,
      </if>
      <if test="freightPrice != null">
        freight_price,
      </if>
      <if test="giftCardPrice != null">
        gift_card_price,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="realPayPrice != null">
        #{realPayPrice,jdbcType=DECIMAL},
      </if>
      <if test="promotionPrice != null">
        #{promotionPrice,jdbcType=DECIMAL},
      </if>
      <if test="freightPrice != null">
        #{freightPrice,jdbcType=DECIMAL},
      </if>
      <if test="giftCardPrice != null">
        #{giftCardPrice,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lixavier.manage.model.OrderExample" resultType="java.lang.Long">
    select count(*) from tb_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.consignee != null">
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.realPayPrice != null">
        real_pay_price = #{record.realPayPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.promotionPrice != null">
        promotion_price = #{record.promotionPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.freightPrice != null">
        freight_price = #{record.freightPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.giftCardPrice != null">
        gift_card_price = #{record.giftCardPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.closeTime != null">
        close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_order
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      real_pay_price = #{record.realPayPrice,jdbcType=DECIMAL},
      promotion_price = #{record.promotionPrice,jdbcType=DECIMAL},
      freight_price = #{record.freightPrice,jdbcType=DECIMAL},
      gift_card_price = #{record.giftCardPrice,jdbcType=DECIMAL},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      message = #{record.message,jdbcType=VARCHAR},
      close_time = #{record.closeTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lixavier.manage.model.Order">
    update tb_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="realPayPrice != null">
        real_pay_price = #{realPayPrice,jdbcType=DECIMAL},
      </if>
      <if test="promotionPrice != null">
        promotion_price = #{promotionPrice,jdbcType=DECIMAL},
      </if>
      <if test="freightPrice != null">
        freight_price = #{freightPrice,jdbcType=DECIMAL},
      </if>
      <if test="giftCardPrice != null">
        gift_card_price = #{giftCardPrice,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lixavier.manage.model.Order">
    update tb_order
    set user_id = #{userId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=TINYINT},
      consignee = #{consignee,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      real_pay_price = #{realPayPrice,jdbcType=DECIMAL},
      promotion_price = #{promotionPrice,jdbcType=DECIMAL},
      freight_price = #{freightPrice,jdbcType=DECIMAL},
      gift_card_price = #{giftCardPrice,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=VARCHAR},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="logicalDeleteByPrimaryKey">
        UPDATE tb_order
        SET
            is_deleted=1
        WHERE id = #{id,jdbcType=BIGINT} 
    </update>

    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_order
        WHERE id = #{id,jdbcType=BIGINT} 
        AND is_deleted=0
        FOR UPDATE
    </select>
    
    <select id="queryOrder" resultMap="BaseResultMap" parameterType="com.lixavier.manage.req.OrderQueryDTO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tb_order
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="userId!=null">AND user_id = #{userId,jdbcType=BIGINT}</if>
            <if test="userIdList != null and userIdList.size > 0">
                <foreach item="item" separator="," open="AND user_id in (" close=")" collection="userIdList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="orderNo!=null and orderNo!=''">AND order_no = #{orderNo,jdbcType=VARCHAR}</if>
            <if test="orderNoLike != null and orderNoLike != '' ">AND order_no LIKE concat(#{orderNoLike,jdbcType=VARCHAR},'%')</if>
            <if test="orderNoList != null and orderNoList.size > 0">
                <foreach item="item" separator="," open="AND order_no in (" close=")" collection="orderNoList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="orderStatus!=null">AND order_status = #{orderStatus,jdbcType=TINYINT}</if>
            <if test="orderStatusList != null and orderStatusList.size > 0">
                <foreach item="item" separator="," open="AND order_status in (" close=")" collection="orderStatusList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="consignee!=null and consignee!=''">AND consignee = #{consignee,jdbcType=VARCHAR}</if>
            <if test="consigneeLike != null and consigneeLike != '' ">AND consignee LIKE concat(#{consigneeLike,jdbcType=VARCHAR},'%')</if>
            <if test="consigneeList != null and consigneeList.size > 0">
                <foreach item="item" separator="," open="AND consignee in (" close=")" collection="consigneeList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="mobile!=null and mobile!=''">AND mobile = #{mobile,jdbcType=VARCHAR}</if>
            <if test="mobileLike != null and mobileLike != '' ">AND mobile LIKE concat(#{mobileLike,jdbcType=VARCHAR},'%')</if>
            <if test="mobileList != null and mobileList.size > 0">
                <foreach item="item" separator="," open="AND mobile in (" close=")" collection="mobileList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="address!=null and address!=''">AND address = #{address,jdbcType=VARCHAR}</if>
            <if test="addressLike != null and addressLike != '' ">AND address LIKE concat(#{addressLike,jdbcType=VARCHAR},'%')</if>
            <if test="addressList != null and addressList.size > 0">
                <foreach item="item" separator="," open="AND address in (" close=")" collection="addressList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="totalPriceFrom != null"><![CDATA[AND total_price >= #{totalPriceFrom,jdbcType=DECIMAL}]]></if>
            <if test="totalPriceTo != null"><![CDATA[AND total_price <= #{totalPriceTo,jdbcType=DECIMAL}]]></if>
            <if test="realPayPriceFrom != null"><![CDATA[AND real_pay_price >= #{realPayPriceFrom,jdbcType=DECIMAL}]]></if>
            <if test="realPayPriceTo != null"><![CDATA[AND real_pay_price <= #{realPayPriceTo,jdbcType=DECIMAL}]]></if>
            <if test="promotionPriceFrom != null"><![CDATA[AND promotion_price >= #{promotionPriceFrom,jdbcType=DECIMAL}]]></if>
            <if test="promotionPriceTo != null"><![CDATA[AND promotion_price <= #{promotionPriceTo,jdbcType=DECIMAL}]]></if>
            <if test="freightPriceFrom != null"><![CDATA[AND freight_price >= #{freightPriceFrom,jdbcType=DECIMAL}]]></if>
            <if test="freightPriceTo != null"><![CDATA[AND freight_price <= #{freightPriceTo,jdbcType=DECIMAL}]]></if>
            <if test="giftCardPriceFrom != null"><![CDATA[AND gift_card_price >= #{giftCardPriceFrom,jdbcType=DECIMAL}]]></if>
            <if test="giftCardPriceTo != null"><![CDATA[AND gift_card_price <= #{giftCardPriceTo,jdbcType=DECIMAL}]]></if>
            <if test="payTimeFrom != null"><![CDATA[AND pay_time >= #{payTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="payTimeTo != null"><![CDATA[AND pay_time <= #{payTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="closeTimeFrom != null"><![CDATA[AND close_time >= #{closeTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="closeTimeTo != null"><![CDATA[AND close_time <= #{closeTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="isDeleted!=null">AND is_deleted = #{isDeleted,jdbcType=BOOLEAN}</if>
            <if test="isDeletedList != null and isDeletedList.size > 0">
                <foreach item="item" separator="," open="AND is_deleted in (" close=")" collection="isDeletedList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into tb_order (
            user_id,
            order_no,
            order_status,
            consignee,
            mobile,
            address,
            total_price,
            real_pay_price,
            promotion_price,
            freight_price,
            gift_card_price,
            pay_time,
            message,
            close_time,
            create_time,
            update_time,
            is_deleted        )
        values
        <foreach collection="modelList" item="bean" index="index" separator=",">
        (
            #{bean.userId,jdbcType=BIGINT} ,
            #{bean.orderNo,jdbcType=VARCHAR} ,
            #{bean.orderStatus,jdbcType=TINYINT} ,
            #{bean.consignee,jdbcType=VARCHAR} ,
            #{bean.mobile,jdbcType=VARCHAR} ,
            #{bean.address,jdbcType=VARCHAR} ,
            #{bean.totalPrice,jdbcType=DECIMAL} ,
            #{bean.realPayPrice,jdbcType=DECIMAL} ,
            #{bean.promotionPrice,jdbcType=DECIMAL} ,
            #{bean.freightPrice,jdbcType=DECIMAL} ,
            #{bean.giftCardPrice,jdbcType=DECIMAL} ,
            #{bean.payTime,jdbcType=TIMESTAMP} ,
            #{bean.message,jdbcType=VARCHAR} ,
            #{bean.closeTime,jdbcType=TIMESTAMP} ,
            #{bean.createTime,jdbcType=TIMESTAMP} ,
            #{bean.updateTime,jdbcType=TIMESTAMP} ,
            #{bean.isDeleted,jdbcType=BOOLEAN}         )
        </foreach>
    </insert>



    <select id="selectByOrderNo" resultMap="BaseResultMap">
      SELECT
      <include refid="Base_Column_List" />
      FROM tb_order
      WHERE  order_no = #{orderNo,jdbcType=VARCHAR}
      AND is_deleted = 0
    </select>

  <select id="getOverduePaymentOrders" resultType="com.lixavier.manage.model.Order">
    SELECT
      id,
      order_no
    FROM
        tb_order
    WHERE
        order_status = #{orderStatus,jdbcType=TINYINT}
    AND create_time &lt;= ADDDATE(SYSDATE(),INTERVAL - 15 MINUTE)


  </select>

    
</mapper>