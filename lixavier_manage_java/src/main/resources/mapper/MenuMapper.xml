<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lixavier.manage.dao.MenuMapper">
    <resultMap id="BaseResultMap" type="com.lixavier.manage.model.Menu">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="perms" jdbcType="VARCHAR" property="perms"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
    </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent_id, name, url, perms, type, icon, order_num, create_time, update_time, 
    is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.lixavier.manage.model.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_menu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lixavier.manage.model.MenuExample">
    delete from tb_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lixavier.manage.model.Menu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_menu (parent_id, name, url, 
      perms, type, icon, 
      order_num, create_time, update_time, 
      is_deleted)
    values (#{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{perms,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{icon,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.lixavier.manage.model.Menu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="perms != null">
        perms,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="perms != null">
        #{perms,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lixavier.manage.model.MenuExample" resultType="java.lang.Long">
    select count(*) from tb_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.perms != null">
        perms = #{record.perms,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_menu
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      perms = #{record.perms,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      icon = #{record.icon,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lixavier.manage.model.Menu">
    update tb_menu
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="perms != null">
        perms = #{perms,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lixavier.manage.model.Menu">
    update tb_menu
    set parent_id = #{parentId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      perms = #{perms,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      icon = #{icon,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="logicalDeleteByPrimaryKey">
        UPDATE tb_menu
        SET
            is_deleted=1
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_menu
        WHERE id = #{id,jdbcType=BIGINT} 
        AND is_deleted=0
        FOR UPDATE
    </select>
    
    <select id="queryMenu" resultMap="BaseResultMap" parameterType="com.lixavier.manage.req.MenuQueryDTO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tb_menu
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="parentId!=null">AND parent_id = #{parentId,jdbcType=BIGINT}</if>
            <if test="parentIdList != null and parentIdList.size > 0">
                <foreach item="item" separator="," open="AND parent_id in (" close=")" collection="parentIdList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="name!=null and name!=''">AND name = #{name,jdbcType=VARCHAR}</if>
            <if test="nameLike != null and nameLike != '' ">AND name LIKE concat(#{nameLike,jdbcType=VARCHAR},'%')</if>
            <if test="nameList != null and nameList.size > 0">
                <foreach item="item" separator="," open="AND name in (" close=")" collection="nameList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="url!=null and url!=''">AND url = #{url,jdbcType=VARCHAR}</if>
            <if test="urlLike != null and urlLike != '' ">AND url LIKE concat(#{urlLike,jdbcType=VARCHAR},'%')</if>
            <if test="urlList != null and urlList.size > 0">
                <foreach item="item" separator="," open="AND url in (" close=")" collection="urlList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="type!=null">AND type = #{type,jdbcType=TINYINT}</if>
            <if test="typeList != null and typeList.size > 0">
                <foreach item="item" separator="," open="AND type in (" close=")" collection="typeList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="icon!=null and icon!=''">AND icon = #{icon,jdbcType=VARCHAR}</if>
            <if test="iconLike != null and iconLike != '' ">AND icon LIKE concat(#{iconLike,jdbcType=VARCHAR},'%')</if>
            <if test="iconList != null and iconList.size > 0">
                <foreach item="item" separator="," open="AND icon in (" close=")" collection="iconList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="orderNum!=null">AND order_num = #{orderNum,jdbcType=INTEGER}</if>
            <if test="orderNumList != null and orderNumList.size > 0">
                <foreach item="item" separator="," open="AND order_num in (" close=")" collection="orderNumList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="isDeleted!=null">AND is_deleted = #{isDeleted,jdbcType=BOOLEAN}</if>
            <if test="isDeletedList != null and isDeletedList.size > 0">
                <foreach item="item" separator="," open="AND is_deleted in (" close=")" collection="isDeletedList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into tb_menu (
            parent_id,
            name,
            url,
            perms,
            type,
            icon,
            order_num,
            create_time,
            update_time,
            is_deleted        )
        values
        <foreach collection="modelList" item="bean" index="index" separator=",">
        (
            #{bean.parentId,jdbcType=BIGINT} ,
            #{bean.name,jdbcType=VARCHAR} ,
            #{bean.url,jdbcType=VARCHAR} ,
            #{bean.perms,jdbcType=VARCHAR} ,
            #{bean.type,jdbcType=TINYINT} ,
            #{bean.icon,jdbcType=VARCHAR} ,
            #{bean.orderNum,jdbcType=INTEGER} ,
            #{bean.createTime,jdbcType=TIMESTAMP} ,
            #{bean.updateTime,jdbcType=TIMESTAMP} ,
            #{bean.isDeleted,jdbcType=BOOLEAN}         )
        </foreach>
    </insert>


    <resultMap id="NavMap" type="com.lixavier.manage.model.Menu">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="perms" jdbcType="VARCHAR" property="perms"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <collection property="children" ofType="com.lixavier.manage.model.Menu">
            <id column="rid" jdbcType="BIGINT" property="id"/>
            <result column="rparent_id" jdbcType="BIGINT" property="parentId"/>
            <result column="rname" jdbcType="VARCHAR" property="name"/>
            <result column="rurl" jdbcType="VARCHAR" property="url"/>
            <result column="rperms" jdbcType="VARCHAR" property="perms"/>
            <result column="rtype" jdbcType="TINYINT" property="type"/>
            <result column="ricon" jdbcType="VARCHAR" property="icon"/>
        </collection>
    </resultMap>

    <select id="getResourcesByRoleId" resultType="com.lixavier.manage.model.Menu">
        SELECT
            m.id,
            m.NAME,
            m.perms,
            m.parent_id,
            m.url,
            m.type,
            m.order_num
        FROM
            tb_role_menu rm
            INNER JOIN tb_menu m ON rm.menu_id = m.id
        WHERE
            m.is_deleted = 0
            AND rm.role_id = #{roleId, jdbcType=BIGINT}
    </select>

    <select id="getUserMenuList" resultMap="BaseResultMap">
        SELECT
            r.id,
            r.parent_id,
            r.name,
            r.url,
            r.perms,
            r.type,
            r.icon
        FROM
            tb_user_role user_role
            INNER JOIN tb_role_menu role_menu ON role_menu.role_id = user_role.role_id
            INNER JOIN tb_menu r ON role_menu.menu_id = r.id
            AND r.is_deleted = 0
            AND r.type = #{type, jdbcType=TINYINT}
        WHERE
            user_role.user_id = #{userId, jdbcType=BIGINT}
        ORDER BY
            r.order_num,
            r.id
    </select>

    <select id="getUserPermissions" resultType="string" parameterType="long">
        SELECT
            r.perms
        FROM
            tb_user_role user_role
            INNER JOIN tb_role_menu role_menu ON role_menu.role_id = user_role.role_id
            INNER JOIN tb_menu r ON role_menu.menu_id = r.id
            AND r.is_deleted = 0
        WHERE
            user_role.user_id = #{userId, jdbcType=BIGINT}
        ORDER BY
            r.order_num,
            r.id
    </select>


    
</mapper>