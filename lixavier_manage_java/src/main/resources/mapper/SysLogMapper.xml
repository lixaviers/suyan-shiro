<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lixavier.manage.dao.SysLogMapper">
    <resultMap id="BaseResultMap" type="com.lixavier.manage.model.SysLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, user_name, nick_name, operation, method, params, time, ip, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.lixavier.manage.model.SysLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_sys_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_sys_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lixavier.manage.model.SysLogExample">
    delete from tb_sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lixavier.manage.model.SysLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_sys_log (user_id, user_name, nick_name, 
      operation, method, params, 
      time, ip, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{operation,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{params,jdbcType=VARCHAR}, 
      #{time,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lixavier.manage.model.SysLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="operation != null">
        operation,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lixavier.manage.model.SysLogExample" resultType="java.lang.Long">
    select count(*) from tb_sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_sys_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.operation != null">
        operation = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_sys_log
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      operation = #{record.operation,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      params = #{record.params,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lixavier.manage.model.SysLog">
    update tb_sys_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lixavier.manage.model.SysLog">
    update tb_sys_log
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      time = #{time,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>



    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_sys_log
        WHERE id = #{id,jdbcType=BIGINT} 
        FOR UPDATE
    </select>
    
    <select id="querySysLog" resultMap="BaseResultMap" parameterType="com.lixavier.manage.req.SysLogQueryDTO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tb_sys_log
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="userId!=null">AND user_id = #{userId,jdbcType=BIGINT}</if>
            <if test="userIdList != null and userIdList.size > 0">
                <foreach item="item" separator="," open="AND user_id in (" close=")" collection="userIdList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="userName!=null and userName!=''">AND user_name = #{userName,jdbcType=VARCHAR}</if>
            <if test="userNameLike != null and userNameLike != '' ">AND user_name LIKE concat(#{userNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="userNameList != null and userNameList.size > 0">
                <foreach item="item" separator="," open="AND user_name in (" close=")" collection="userNameList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="nickName!=null and nickName!=''">AND nick_name = #{nickName,jdbcType=VARCHAR}</if>
            <if test="nickNameLike != null and nickNameLike != '' ">AND nick_name LIKE concat(#{nickNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="nickNameList != null and nickNameList.size > 0">
                <foreach item="item" separator="," open="AND nick_name in (" close=")" collection="nickNameList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="operation!=null and operation!=''">AND operation = #{operation,jdbcType=VARCHAR}</if>
            <if test="operationLike != null and operationLike != '' ">AND operation LIKE concat(#{operationLike,jdbcType=VARCHAR},'%')</if>
            <if test="operationList != null and operationList.size > 0">
                <foreach item="item" separator="," open="AND operation in (" close=")" collection="operationList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="method!=null and method!=''">AND method = #{method,jdbcType=VARCHAR}</if>
            <if test="methodLike != null and methodLike != '' ">AND method LIKE concat(#{methodLike,jdbcType=VARCHAR},'%')</if>
            <if test="methodList != null and methodList.size > 0">
                <foreach item="item" separator="," open="AND method in (" close=")" collection="methodList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="timeFrom != null"><![CDATA[AND time >= #{timeFrom,jdbcType=BIGINT}]]></if>
            <if test="timeTo != null"><![CDATA[AND time <= #{timeTo,jdbcType=BIGINT}]]></if>
            <if test="ip!=null and ip!=''">AND ip = #{ip,jdbcType=VARCHAR}</if>
            <if test="ipLike != null and ipLike != '' ">AND ip LIKE concat(#{ipLike,jdbcType=VARCHAR},'%')</if>
            <if test="ipList != null and ipList.size > 0">
                <foreach item="item" separator="," open="AND ip in (" close=")" collection="ipList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into tb_sys_log (
            user_id,
            user_name,
            nick_name,
            operation,
            method,
            params,
            time,
            ip,
            create_time,
            update_time        )
        values
        <foreach collection="modelList" item="bean" index="index" separator=",">
        (
            #{bean.userId,jdbcType=BIGINT} ,
            #{bean.userName,jdbcType=VARCHAR} ,
            #{bean.nickName,jdbcType=VARCHAR} ,
            #{bean.operation,jdbcType=VARCHAR} ,
            #{bean.method,jdbcType=VARCHAR} ,
            #{bean.params,jdbcType=VARCHAR} ,
            #{bean.time,jdbcType=BIGINT} ,
            #{bean.ip,jdbcType=VARCHAR} ,
            #{bean.createTime,jdbcType=TIMESTAMP} ,
            #{bean.updateTime,jdbcType=TIMESTAMP}         )
        </foreach>
    </insert>

    
</mapper>